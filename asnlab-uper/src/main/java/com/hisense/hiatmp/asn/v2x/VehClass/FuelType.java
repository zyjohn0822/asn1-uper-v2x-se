/*
 * Generated by ASN.1 Java Compiler (https://www.asnlab.org/)
 * From ASN.1 module "VehClass"
 */
package com.hisense.hiatmp.asn.v2x.VehClass;

import org.asnlab.asndt.runtime.conv.AsnConverter;
import org.asnlab.asndt.runtime.conv.EncodingRules;
import org.asnlab.asndt.runtime.conv.IntegerConverter;
import org.asnlab.asndt.runtime.type.AsnType;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

public class FuelType {


    public final static AsnType TYPE = VehClass.type(65594);
    public final static AsnConverter CONV = IntegerConverter.INSTANCE;
    public final static Integer unknownFuel = (Integer) VehClass.value(65595, CONV);
    public final static Integer gasoline = (Integer) VehClass.value(65596, CONV);
    public final static Integer ethanol = (Integer) VehClass.value(65597, CONV);
    public final static Integer diesel = (Integer) VehClass.value(65598, CONV);
    public final static Integer electric = (Integer) VehClass.value(65599, CONV);
    public final static Integer hybrid = (Integer) VehClass.value(65600, CONV);
    public final static Integer hydrogen = (Integer) VehClass.value(65601, CONV);
    public final static Integer natGasLiquid = (Integer) VehClass.value(65602, CONV);
    public final static Integer natGasComp = (Integer) VehClass.value(65603, CONV);
    public final static Integer propane = (Integer) VehClass.value(65604, CONV);

    public static void ber_encode(Integer object, OutputStream out) throws IOException {
        TYPE.encode(object, EncodingRules.BASIC_ENCODING_RULES, CONV, out);
    }

    public static Integer ber_decode(InputStream in) throws IOException {
        return (Integer) TYPE.decode(in, EncodingRules.BASIC_ENCODING_RULES, CONV);
    }

    public static void per_encode(Integer object, boolean align, OutputStream out) throws IOException {
        TYPE.encode(object, align ? EncodingRules.ALIGNED_PACKED_ENCODING_RULES : EncodingRules.UNALIGNED_PACKED_ENCODING_RULES, CONV, out);
    }

    public static Integer per_decode(boolean align, InputStream in) throws IOException {
        return (Integer) TYPE.decode(in, align ? EncodingRules.ALIGNED_PACKED_ENCODING_RULES : EncodingRules.UNALIGNED_PACKED_ENCODING_RULES, CONV);
    }


}
